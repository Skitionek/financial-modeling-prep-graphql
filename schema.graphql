type Query {



    cryptocurrencyExchangeRates: [CryptocurrencyExchangeRate]
    cryptocurrency(symbol: String!, market: String): Cryptocurrency, #Do not overwrite alphavantege
    cryptocurrencies: [Cryptocurrency]!,
    financial(symbol: String!, period: String, datatype: String): Financial!,
    cryptocurrencyExchangeRate(from_currency: String!, to_currency: String!): CryptocurrencyExchangeRate!,
    performance: Performance!,
    technical(index: String): Technical!,
}


type Company {
    profile(symbol: String): CompanyProfile!,
    financial(symbol: String, period: String, datatype: String): Financial!,
    price: Float!,
    rating: Float!,
    discounted_cash_flow: Float
}

type CompanyProfile {
    Price: Float!,
    Beta: String!,
    VolAvg: String!,
    MktCap: String!,
    LastDiv: String!,
    Range: String!,
    Changes: Float!,
    ChangesPerc: String!,
    companyName: String!,
    exchange: String!,
    industry: String!,
    website: String!,
    description: String!,
    CEO: String!,
    sector: String!,
    date_is_filed: String!,
    date_bs_filed: String!,
    date_cs_filed: String!,
    image: String
}

type Cryptocurrency { #extend it by fragments
    Ticker: String!,
    Price: Float!,
    Changes: Float!,
    name: String!,
    market_cap_usd: Float
}

# Forex -> CryptocurrencyExchangeRate
type CryptocurrencyExchangeRate {
    #    {
    #        "EUR/USD": {
    #            "Ticker": "EUR/USD"!,
    #            "Price": 1.11916!,
    #            "Changes": -1.34028e-5!,
    #            "Name": "Euro"
    #        }
    #    }

    #    "Ticker": "EUR/USD", => from_currency, to_currency
    from_currency: String!,
    to_currency: String!,
    price: Float!,
    changes: Float!,
    name: String!
}

type Financial {
    income_statement(symbol: String, period: String, datatype: String): [IncomeStatement]!,
    balance_sheet_statement(symbol: String, period: String, datatype: String): [BalanceSheetStatement]!,
    cash_flow_statement(symbol: String, period: String, datatype: String): [CashFlowStatement]
}

type IncomeStatement {
    period: String!,
    Revenue: Float,
    Cost_of_revenue: Float,
    Gross_profit: Float,
    Research_and_development: Float,
    Sales__General_and_administrative: Float,
    Total_operating_expenses: Float,
    Operating_income: Float,
    Interest_Expense: Float,
    Other_income__expense_: Float,
    Income_before_taxes: Float,
    Provision_for_income_taxes: Float,
    Net_income_from_continuing_operations: Float,
    Net_income: Float,
    Net_income_available_to_common_shareholders: Float,
    Basic: Float,
    Diluted: Float,
    EBITDA: Float
}

type BalanceSheetStatement{
    period: String!,
    Cash_and_cash_equivalents: Float,
    Short_term_investments: Float,
    Total_cash: Float,
    Receivables: Float,
    Inventories: Float,
    Deferred_income_taxes: Float,
    Other_current_assets: Float,
    Total_current_assets: Float,
    Gross_property__plant_and_equipment: Float,
    Accumulated_Depreciation: Float,
    Net_property__plant_and_equipment: Float,
    Equity_and_other_investments: Float,
    Goodwill: Float,
    Intangible_assets: Float,
    Other_long_term_assets: Float,
    Total_non_current_assets: Float,
    Total_assets: Float,
    Short_term_debt: Float,
    Accounts_payable: Float,
    Taxes_payable: Float,
    Accrued_liabilities: Float,
    Deferred_revenues: Float,
    Other_current_liabilities: Float,
    Total_current_liabilities: Float,
    Long_term_debt: Float,
    Deferred_taxes_liabilities: Float,
    Other_long_term_liabilities: Float,
    Total_non_current_liabilities: Float,
    Total_liabilities: Float,
    Common_stock: Float,
    Retained_earnings: Float,
    Accumulated_other_comprehensive_income: Float,
    Total_stockholders__equity: Float,
    Total_liabilities_and_stockholders__equity: Float
}

type CashFlowStatement {
    period: String!,
    Net_income: Float,
    Depreciation___amortization: Float,
    Deferred_income_taxes: Float,
    Stock_based_compensation: Float,
    Change_in_working_capital: Float,
    Accounts_receivable: Float,
    Inventory: Float,
    Accounts_payable: Float,
    Other_working_capital: Float,
    Other_non_cash_items: Float,
    Net_cash_provided_by_operating_activities: Float,
    Investments_in_property__plant__and_equipment: Float,
    Acquisitions__net: Float,
    Purchases_of_investments: Float,
    Sales__Maturities_of_investments: Float,
    Purchases_of_intangibles: Float,
    Other_investing_activities: Float,
    Net_cash_used_for_investing_activities: Float,
    Debt_issued: Float,
    Debt_repayment: Float,
    Common_stock_issued: Float,
    Common_stock_repurchased: Float,
    Dividend_paid: Float,
    Other_financing_activities: Float,
    Net_cash_provided_by__used_for__financing_activities: Float,
    Net_change_in_cash: Float,
    Cash_at_beginning_of_period: Float,
    Cash_at_end_of_period: Float,
    Operating_cash_flow: Float,
    Capital_expenditure: Float,
    Free_cash_flow: Float
}

type Forex {
    fromCurrency: String!,
    toCurrency: String!,
    Ticker: String!,
    Price: Float!,
    Changes: Float!,
    Name: String
}

type SectorPerformance {
    a: String
}

type MajorIndex {
    Ticker: String!,
    Price: Float!,
    Changes: Float!,
    Name: String
}

type Performance {
    Information_Technology: String!,
    Consumer_Staples: String!,
    Consumer_Discretionary: String!,
    Materials: String!,
    Financials: String!,
    Industrials: String!,
    Real_Estate: String!,
    Health_Care: String!,
    Telecommunication_Services: String!,
    Energy: String!,
    Utilities: String!,
    Communication_Services: String
}

type Technical {
    major_indexes: [MajorIndex]
}

type Stock {
	symbol: String!

    actives: [StockInsight]
    gainers: [StockInsight]
    losers: [StockInsight]
    all: [StockInsight]
}

type StockInsight {
    Ticker: String
    Price: String
    Changes: Float
    ChangesPerc: String
    companyName: String
}